akka {



  http {
    server {
      preview.enable-http2 = on

      # The time after which an idle connection will be automatically closed.
      # Set to `infinite` to completely disable idle connection timeouts.
      idle-timeout = 10 s #60

    }
  }

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = DEBUG
  logger-startup-timeout = 30s
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = on
  log-dead-letters-during-shutdown = false

  actor {

    #this dispatcher uses up to 4 threads
    default-dispatcher {
      fork-join-executor {
        parallelism-factor = 1.0
        parallelism-min = 4
        parallelism-max = 6
      }
    }
  }

  stream.materializer {
    initial-input-buffer-size = ${conversation.buffer-size}
    max-input-buffer-size     = ${conversation.buffer-size}
    max-fixed-buffer-size     = ${conversation.buffer-size}
    dispatcher = akka.actor.default-dispatcher #stream-dispatcher

    stream-ref {
      buffer-capacity = ${conversation.buffer-size}
      subscription-timeout = 3 seconds
    }
  }
}

stream-dispatcher {
  fork-join-executor {
    parallelism-factor = 1.0
    parallelism-min = 2
    parallelism-max = 4
  }
}

fixed-thread-pool {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 5
  }
  throughput = 2
}

resizable-thread-pool {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 4
    core-pool-size-factor = 2.0
    core-pool-size-max = 8
  }
  throughput = 1000
}

conversation {
  port = 8080
  port = ${?PORT}

  banned-users = [aa, bb, cc]

  banned-hosts = [127.0.0.2, 127.0.0.3]

  buffer-size = 4
  
  jks-path = ./jks/chat.jks
  jks-psw  = "open$sesam"
}

akka.grpc.client {
  "server.grpc.ConversationService" {
    host = 127.0.0.1
    port = 8080
    override-authority = "localhost"

    #override-authority = foo.test.google.fr
    use-tls = false
    #trusted = /certs/ca.pem
  }
}
